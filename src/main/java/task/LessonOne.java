package task;

// ' {}' - не нужно использовать чтобы просто обрамлять логику - используется только в условных выражения if/else, для создания метода, класса
public class LessonOne {
    public static void main(String[] args) {
        //Сложение целых чисел: Объявите две целочисленные переменные и присвойте им значения. Выведите их сумму в консоль.
        int num1 = 10;
        int num2 = 11;

        System.out.println("Результат: " + (num1 + num2));

        //Вычитание целых чисел: Объявите две целочисленные переменные и присвойте им значения. Выведите их разность в консоль.
        byte num3 = 56;
        byte num4 = 35;

        System.out.println("Результат: " + (num3 - num4));

        //Умножение целых чисел: Объявите две целочисленные переменные и присвойте им значения. Выведите их произведение в консоль.
        byte num5 = 7;
        byte num6 = 3;

        System.out.println("Результат: " + (num5 * num6));

        //Деление целых чисел: Объявите две целочисленные переменные и присвойте им значения. Выведите результат деления первого числа на второе в консоль.
        int num7 = 315;
        int num8 = 15;

        System.out.println("Результат: " + (num7 / num8));

        //Деление по модулю: Объявите две целочисленные переменные и присвойте им значения. Выведите остаток от деления первого числа на второе в консоль.
        byte num9 = 11;
        byte num10 = 3;

        System.out.println("Результат: " + (num9 % num10));

        //инкремент: Объявите целочисленную переменную и присвойте ей значение. Увеличьте значение переменной на 1 и выведите результат в консоль.
        int numberOne = 20;

        System.out.println("Результат: " + ++numberOne); // можно сразу использовать префексный инкремент

        //Декремент: Объявите целочисленную переменную и присвойте ей значение. Уменьшите значение переменной на 1 и выведите результат в консоль.
        byte numberTwo = 10;

        System.out.println("Результат: " + --numberTwo); // можно сразу использовать префексный декримент

        //Сложение чисел с плавающей запятой: Объявите две переменные с плавающей точкой и присвойте им значения. Выведите их сумму в консоль.
        double numberThree = 3.14;
        double numberFour = 2.715;

        System.out.println("Результат: " + (numberThree + numberFour));

        //Вычитание чисел с плавающей запятой: Объявите две переменные с плавающей точкой и присвойте им значения. Выведите их разность в консоль.
        double numberFive = 14.1;
        double numberSix = 7.32;

        System.out.println("Ответ: " + (numberFive - numberSix));

        //Умножение чисел с плавающей запятой: Объявите две переменные с плавающей точкой и присвойте им значения. Выведите их произведение в консоль.
        double numberSeven = 2.89;
        double numberEight = 5.5;

        System.out.println("Умножили: " + (numberSeven * numberEight));

        //Деление чисел с плавающей запятой: Объявите две переменные с плавающей точкой и присвойте им значения. Выведите результат деления первого числа на второе в консоль.
        double numberNine = 27.89;
        double numberTen = 9.43;

        System.out.println("Поделили: " + (numberNine / numberTen));

        //Инкремент для числа с плавающей запятой: Объявите переменную с плавающей точкой и присвойте ей значение. Увеличьте значение переменной на 1 и выведите результат в консоль.
        double numberAgain = 7.89;

        System.out.println("Результат: " + ++numberAgain);// можно сразу использовать префексный инкремент

        //Декремент для числа с плавающей запятой: Объявите переменную с плавающей точкой и присвойте ей значение. Уменьшите значение переменной на 1 и выведите результат в консоль.
        double noNumber = 9.99;

        System.out.println("Result: " + --noNumber); // можно сразу использовать префексный декримент

        //Логическое И: Объявите две логические переменные и присвойте им значения. Выведите результат логического И в консоль.
        boolean alpha = true;
        boolean beta = false;

        System.out.println("result: " + (alpha && beta));

        //Логическое ИЛИ: Объявите две логические переменные и присвойте им значения. Выведите результат логического ИЛИ в консоль.
        boolean charly = false;
        boolean gamma = true;

        System.out.println("Result: " + (charly || gamma));

        //Логическое отрицание: Объявите логическую переменную и присвойте ей значение. Выведите результат логического отрицания в консоль.
        boolean odin = true; // пишим только на англ. если сложно придумать консультируемся с ИИ

        System.out.println("Resultat: " + !odin);

        //Сложение символов: Объявите две переменные типа char и присвойте им значения символов. Выведите результат их сложения в консоль.
        char pershi = 56;// пишим только на англ. если сложно придумать консультируемся с ИИ
        char druhi = 77;// пишим только на англ. если сложно придумать консультируемся с ИИ
        System.out.println("Result: " + (pershi + druhi));

        //Сложение двух строк: Объявите две строки и присвойте им значения. Выведите результат их конкатенации в консоль.
        String strOne = "15";
        String strTwo = " cow";
        System.out.println("Result: " + strOne + strTwo);// скобки не нужны, т.к. строки просто соединяются в одну - вычисления нет

        //Деление с плавающей запятой и приведение к целому типу: Объявите две переменные с плавающей запятой и присвойте им значения. Выполните деление одной переменной на другую и приведите результат к целочисленному типу. Выведите результат в консоль.
        double doubleOne = 8.9;
        double doubleTwo = 2.7;
        int result = (int) (doubleOne / doubleTwo);

        System.out.println("Result: " + result);

        //Проверка на четность целого числа: Объявите целочисленную переменную и присвойте ей значение. Проверьте, является ли число четным, и выведите соответствующее сообщение в консоль.
        int soul = 17;

        System.out.println("Четное: " + (soul % 2 == 0));

        //Приведение типов: Объявите переменную типа double и присвойте ей значение. Приведите это значение к целочисленному типу и выведите результат в консоль.
        double simple = 12.4;

        System.out.println("Number: " + (int) simple);// забыл привести к целому числу

        //Проверка на равенство двух чисел: Объявите две переменные и присвойте им значения. Проверьте, равны ли они между собой, и выведите соответствующее сообщение в консоль.
        int a = 4;
        int b = 40;

        System.out.println("Равно: " + (a == b));

        //Проверка на неравенство двух чисел: Объявите две переменные и присвойте им значения. Проверьте, не равны ли они между собой, и выведите соответствующее сообщение в консоль.
        int c = 7;
        int d = 55;

        System.out.println("Не равны: " + (a != b));

        //Проверка на положительное число: Объявите переменную и присвойте ей значение. Проверьте, является ли число положительным, и выведите соответствующее сообщение в консоль.
        byte e = 12;

        System.out.println("Больше: " + (e > 0));

        //Проверка на отрицательное число: Объявите переменную и присвойте ей значение. Проверьте, является ли число отрицательным, и выведите соответствующее сообщение в консоль.
        byte f = 10;

        System.out.println("Меньше: " + (f < 0));

        //Проверка на нулевое значение: Объявите переменную и присвойте ей значение. Проверьте, является ли число нулем, и выведите соответствующее сообщение в консоль.
        byte g = 3;

        System.out.println("Ноль: " + (g == 0));

        //Проверка на четность числа без использования остатка от деления: Объявите переменную и присвойте ей значение. Проверьте, является ли число четным без использования оператора остатка от деления и выведите соответствующее сообщение в консоль.
        int gravity = 23; // не называем просто так пременные
        int farm = gravity / 2;// не называем просто так пременные
        int lans = gravity - (farm * 2);// не называем просто так пременные

        int originalNumber = 23;
        int dividedByTwoNumber = originalNumber / 2;
        int resultOfSubtraction = originalNumber - (dividedByTwoNumber * 2);

        System.out.println("Проверка: " + (resultOfSubtraction == 0));

        //Проверка на нечетность числа без использования остатка от деления: Объявите переменную и присвойте ей значение. Проверьте, является ли число нечетным без использования оператора остатка от деления и выведите соответствующее сообщение в консоль.
        int easy = 43;// не называем просто так пременные
        int rock = easy / 2;// не называем просто так пременные
        int lasc = easy - (rock * 2);// не называем просто так пременные

        System.out.println("Праверка: " + (lasc != 0));

        //Проверка числа на простоту: Объявите переменную и присвойте ей значение. Проверьте, является ли число простым, и выведите соответствующее сообщение в консоль.
        byte psg = 16;

        System.out.println("Простота: " + (psg % 2 == 0));

        //Сравнение целых чисел: Объявите две целочисленные переменные и сравните их между собой. Выведите результат сравнения в консоль.
        int real = 78;
        int barca = 77;

        System.out.println("Целые: " + (real == barca));

        //Сравнение чисел с плавающей запятой: Объявите две переменные с плавающей точкой и сравните их между собой. Выведите результат сравнения в консоль.
        double city = 5.9;
        double villa = 5.9;

        System.out.println("Плавающие: " + (city == villa));

        //Сравнение строк: Объявите две строки и сравните их. Выведите результат сравнения в консоль.
        String str1 = "Java";
        String str2 = "java";

        System.out.println("String: " + (str1 == str2));

        //Сравнение символов: Объявите две переменные типа char и сравните их между собой. Выведите результат сравнения в консоль.
        char inter = 88; // не называем просто так пременные
        char milan = 87; // не называем просто так пременные

        System.out.println("result: " + (inter == milan));

        //Сравнение целого числа и числа с плавающей запятой: Объявите целочисленную переменную и переменную с плавающей запятой. Сравните их между собой и выведите результат в консоль.
        int juve = 14; // не называем просто так пременные
        double torino = 13.99; // не называем просто так пременные

        System.out.println("result: " + (juve == torino));

        //Сравнение целого числа с нулем: Объявите целочисленную переменную и сравните ее с нулем. Выведите результат в консоль.
        int granada = 110; // не называем просто так пременные

        System.out.println("Result: " + (granada == 0));

        //Сравнение числа с плавающей запятой с нулем: Объявите переменную с плавающей запятой и сравните ее с нулем. Выведите результат в консоль.
        double hamburg = 19.27; // не называем просто так пременные

        System.out.println("result: " + (hamburg == 0));

        //Сравнение двух логических значений: Объявите две логические переменные и сравните их между собой. Выведите результат в консоль.
        boolean ajax = true;
        boolean psv = true;

        System.out.println("Result: " + (ajax == psv));

        //Сравнение числа с нулем с помощью оператора "меньше": Объявите переменную и сравните ее с нулем с помощью оператора "<". Выведите результат в консоль.
        byte legia = 4;

        System.out.println("result: " + (legia < 0));

        //Сравнение числа с нулем с помощью оператора "больше": Объявите переменную и сравните ее с нулем с помощью оператора ">". Выведите результат в консоль.
        byte split = 3;

        System.out.println("result: " + (split > 0));

        //Сравнение числа с плавающей запятой на равенство с другим числом: Объявите переменную с плавающей запятой и сравните ее с другим числом на равенство. Выведите результат в консоль.
        double aston = 3.76;

        System.out.println("result: " + (aston == 3));

    }
}
